% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{zhuFuzzingSurveyRoadmap2022}
X.~Zhu, S.~Wen, S.~Camtepe, and Y.~Xiang, ``Fuzzing: A survey for roadmap,''
  \emph{ACM Computing Surveys}, vol.~54, no. 11s, Sep. 2022.

\bibitem{bohmeReliabilityCoveragebasedFuzzer2022}
M.~B{\"o}hme, L.~Szekeres, and J.~Metzman, ``On the reliability of
  coverage-based fuzzer benchmarking,'' in \emph{Proceedings of the 44th
  International Conference on Software Engineering}, ser. {{ICSE}} '22.\hskip
  1em plus 0.5em minus 0.4em\relax New York, NY, USA: Association for Computing
  Machinery, 2022, pp. 1621--1633.

\bibitem{fioraldiAFLCombiningIncremental2020}
A.~Fioraldi, D.~Maier, H.~Ei{\ss}feldt, and M.~Heuse, ``{{AFL}}++ : Combining
  incremental steps of fuzzing research,'' in \emph{14th {{Usenix Workshop}} on
  {{Offensive Technologies}} (Woot 20)}.\hskip 1em plus 0.5em minus 0.4em\relax
  USENIX Association, Aug. 2020.

\bibitem{zhuRegressionGreyboxFuzzing2021}
X.~Zhu and M.~B{\"o}hme, ``Regression greybox fuzzing,'' in \emph{{{CCS}} '21:
  2021 {{ACM Sigsac Conference}} on {{Computer}} and {{Communications
  Security}}, {{Virtual Event}}, {{Republic}} of {{Korea}}, {{November}} 15 -
  19, 2021}, Y.~Kim, J.~Kim, G.~Vigna, and E.~Shi, Eds.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2021, pp. 2169--2182.

\bibitem{chenNovelCoverageguidedGreybox2023}
J.~Chen, S.~Wang, S.~Cai, C.~Zhang, H.~Chen, J.~Chen, and J.~Zhang, ``A novel
  coverage-guided greybox fuzzing based on power schedule optimization with
  time complexity,'' in \emph{Proceedings of the 37th {{IEEE}}/{{ACM}}
  International Conference on Automated Software Engineering}, ser. {{ASE}}
  '22.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA: Association
  for Computing Machinery, 2023.

\bibitem{AmericanFuzzyLop}
``American fuzzy lop,'' https://lcamtuf.coredump.cx/afl/.

\bibitem{yueEcoFuzzAdaptiveEnergysaving2020}
T.~Yue, P.~Wang, Y.~Tang, E.~Wang, B.~Yu, K.~Lu, and X.~Zhou, ``{{EcoFuzz}}:
  Adaptive energy-saving greybox fuzzing as a variant of the adversarial
  multi-armed bandit,'' in \emph{29th {{Usenix Security Symposium}}, {{Usenix
  Security}} 2020, {{August}} 12-14, 2020}, S.~Capkun and F.~Roesner,
  Eds.\hskip 1em plus 0.5em minus 0.4em\relax USENIX Association, 2020, pp.
  2307--2324.

\bibitem{wuOneFuzzingStrategy2022}
M.~Wu, L.~Jiang, J.~Xiang, Y.~Huang, H.~Cui, L.~Zhang, and Y.~Zhang, ``One
  fuzzing strategy to rule them all,'' in \emph{Proceedings of the 44th
  {{International Conference}} on {{Software Engineering}}}, ser. {{ICSE}}
  '22.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA: Association
  for Computing Machinery, 2022, pp. 1634--1645.

\bibitem{jauernigDARWINSurvivalFittest2023}
P.~Jauernig, D.~Jakobovic, S.~Picek, E.~Stapf, and A.-R. Sadeghi, ``{{DARWIN}}:
  Survival of the fittest fuzzing mutators,'' in \emph{30th {{Annual Network}}
  and {{Distributed System Security Symposium}}, {{Ndss}} 2023, {{San Diego}},
  {{California}}, {{Usa}}, {{February}} 27 - {{March}} 3, 2023}.\hskip 1em plus
  0.5em minus 0.4em\relax The Internet Society, 2023.

\bibitem{gaoFAFuzzNovelScheduling2024}
Z.~Gao, H.~Xiong, W.~Dong, R.~Chang, R.~Yang, Y.~Zhou, and L.~Jiang,
  ``{{FA-fuzz}}: A novel scheduling scheme using firefly algorithm for
  mutation-based fuzzing,'' \emph{IEEE Transactions on Software Engineering},
  vol.~50, no.~1, pp. 1--15, 2024.

\bibitem{lyuMOPTOptimizedMutation2019}
C.~Lyu, S.~Ji, C.~Zhang, Y.~Li, W.-H. Lee, Y.~Song, and R.~Beyah, ``{{MOPT}}:
  Optimized mutation scheduling for fuzzers,'' in \emph{28th {{USENIX}}
  Security Symposium, {{USENIX}} Security 2019, Santa Clara, {{CA}}, {{USA}},
  August 14-16, 2019}, N.~Heninger and P.~Traynor, Eds.\hskip 1em plus 0.5em
  minus 0.4em\relax USENIX Association, 2019, pp. 1949--1966.

\bibitem{bottingerDeepReinforcementFuzzing2018}
K.~B{\"o}ttinger, P.~Godefroid, and R.~Singh, ``Deep reinforcement fuzzing,''
  in \emph{2018 {{IEEE Security}} and {{Privacy Workshops}} (Spw)}, 2018, pp.
  116--122.

\bibitem{gongDRLFCfuzzerFuzzingDeepReinforcementLearning2022}
K.~Gong, W.~Yang, B.~Cui, and C.~Chen, ``{{DRLFCfuzzer}}: Fuzzing with
  deep-reinforcement-learning under format constraints,'' in \emph{Proc. -
  {{Int}}. {{Conf}}. {{Electron}}. {{Inf}}. {{Eng}}. {{Comput}}. {{Technol}}.,
  {{Eiect}}}.\hskip 1em plus 0.5em minus 0.4em\relax {Institute of Electrical
  and Electronics Engineers Inc.}, 2022, pp. 374--380.

\bibitem{jeonDrPathFinderHybrid2022}
S.~Jeon and J.~Moon, ``Dr.{{PathFinder}}: Hybrid fuzzing with deep
  reinforcement concolic execution toward deeper path-first search,''
  \emph{Neural Computing \& Applications}, vol.~34, no.~13, pp.
  10\,731--10\,750, 2022.

\bibitem{liangRLFDirectedFuzzing2022}
X.~Liang and T.~Xiao, ``{{RLF}}: Directed fuzzing based on deep reinforcement
  learning,'' in \emph{2022 {{International Conference}} on {{Machine
  Learning}}, {{Control}}, and {{Robotics}} (Mlcr)}, 2022, pp. 127--133.

\bibitem{liuXRLFuzzFuzzingBinaries2024}
R.~Liu, B.~Cui, C.~Chen, and J.~Ma, ``{{XRLFuzz}}: {{Fuzzing Binaries Guided}}
  by~{{Format Information Based}} on~{{Deep Reinforcement Learning}},'' in
  \emph{Lecture. {{Notes}}. {{Data Eng}}. {{Commun}}. {{Tech}}.}\hskip 1em plus
  0.5em minus 0.4em\relax {Springer Science and Business Media Deutschland
  GmbH}, 2024, vol. 193, pp. 307--317.

\bibitem{binosiRainfuzzReinforcementlearningDriven2023}
L.~Binosi, L.~Rullo, M.~Polino, M.~Carminati, and S.~Zanero, ``Rainfuzz:
  {{Reinforcement-learning}} driven heat-maps for boosting coverage-guided
  fuzzing,'' in \emph{Proceedings of the 12th International Conference on
  Pattern Recognition Applications and Methods, {{ICPRAM}} 2023, Lisbon,
  Portugal, February 22-24, 2023}, M.~D. Marsico, G.~S. {di Baja}, and A.~L.~N.
  Fred, Eds.\hskip 1em plus 0.5em minus 0.4em\relax SCITEPRESS, 2023, pp.
  39--50.

\bibitem{liFirstLookEffect2021}
S.~Li, Y.~Lin, X.~Xie, Y.~Li, X.~Li, W.~Ge, Y.~Liu, and J.~S. Dong, ``A first
  look at the effect of deep learning in coverage-guided fuzzing,'' in
  \emph{36th {{IEEE}}/{{ACM}} International Conference on Automated Software
  Engineering, {{ASE}} 2021, Melbourne, Australia, November 15-19, 2021}.\hskip
  1em plus 0.5em minus 0.4em\relax IEEE, 2021, pp. 1186--1189.

\bibitem{liDeepLearningCoverageguided2022}
S.~Li, X.~Xie, Y.~Lin, Y.~Li, R.~Feng, X.~Li, W.~Ge, and J.~S. Dong, ``Deep
  learning for coverage-guided fuzzing: How far are we?'' \emph{IEEE
  Transactions on Dependable and Secure Computing}, pp. 1--13, 2022.

\bibitem{drozdFuzzerGymCompetitiveFramework2018}
W.~Drozd and M.~D. Wagner, ``{{FuzzerGym}}: A competitive framework for fuzzing
  and learning,'' 2018.

\bibitem{paduraruRiverFuzzRLOpensourceTool2021}
C.~Paduraru, M.~Paduraru, and A.~Stefanescu, ``{{RiverFuzzRL}} - an open-source
  tool to experiment with reinforcement learning for fuzzing,'' in \emph{2021
  14th {{IEEE Conference}} on {{Software Testing}}, {{Verification}} and
  {{Validation}} (Icst)}, 2021, pp. 430--435.

\bibitem{liUNIFUZZHolisticPragmatic2021}
Y.~Li, S.~Ji, Y.~Chen, S.~Liang, W.-H. Lee, Y.~Chen, C.~Lyu, C.~Wu, R.~Beyah,
  P.~Cheng, K.~Lu, and T.~Wang, ``{{UNIFUZZ}}: {{A}} holistic and pragmatic
  metrics-driven platform for evaluating fuzzers,'' in \emph{30th {{USENIX}}
  Security Symposium, {{USENIX}} Security 2021, August 11-13, 2021}, M.~Bailey
  and R.~Greenstadt, Eds.\hskip 1em plus 0.5em minus 0.4em\relax USENIX
  Association, 2021, pp. 2777--2794.

\bibitem{hazimehMagmaGroundtruthFuzzing2021}
A.~Hazimeh, A.~Herrera, and M.~Payer, ``Magma: {{A}} ground-truth fuzzing
  benchmark,'' \emph{Proc. ACM Meas. Anal. Comput. Syst.}, vol.~4, no.~3, Jun.
  2021.

\bibitem{richardbellmanTheoryDynamicProgramming1952}
{Richard Bellman}, ``On the theory of dynamic programming,'' \emph{Proceedings
  of the National Academy of Sciences}, vol.~38, no.~8, pp. 716--719, 1952.

\bibitem{schulmanProximalPolicyOptimization2017}
J.~Schulman, F.~Wolski, P.~Dhariwal, A.~Radford, and O.~Klimov, ``Proximal
  policy optimization algorithms,'' 2017.

\bibitem{bartoNeuronlikeAdaptiveElements1983}
A.~G. Barto, R.~S. Sutton, and C.~W. Anderson, ``Neuronlike adaptive elements
  that can solve difficult learning control problems,'' \emph{IEEE Transactions
  on Systems, Man, and Cybernetics}, vol. SMC-13, no.~5, pp. 834--846, 1983.

\bibitem{heDeepResidualLearning2016}
K.~He, X.~Zhang, S.~Ren, and J.~Sun, ``Deep residual learning for image
  recognition,'' in \emph{2016 {{IEEE}} Conference on Computer Vision and
  Pattern Recognition ({{CVPR}})}, 2016, pp. 770--778.

\bibitem{schaulPrioritizedExperienceReplay2016}
T.~Schaul, J.~Quan, I.~Antonoglou, and D.~Silver, ``Prioritized experience
  replay,'' in \emph{4th International Conference on Learning Representations,
  {{ICLR}} 2016, San Juan, Puerto Rico, May 2-4, 2016, Conference Track
  Proceedings}, Y.~Bengio and Y.~LeCun, Eds., 2016.

\bibitem{haarnojaSoftActorcriticOffpolicy2018}
T.~Haarnoja, A.~Zhou, P.~Abbeel, and S.~Levine, ``Soft actor-critic:
  {{Off-policy}} maximum entropy deep reinforcement learning with a stochastic
  actor,'' in \emph{Proceedings of the 35th International Conference on Machine
  Learning, {{ICML}} 2018, Stockholmsm{\"a}ssan, Stockholm, Sweden, July 10-15,
  2018}, ser. Proceedings of Machine Learning Research, J.~G. Dy and A.~Krause,
  Eds., vol.~80.\hskip 1em plus 0.5em minus 0.4em\relax PMLR, 2018, pp.
  1856--1865.

\bibitem{bohmeCoveragebasedGreyboxFuzzing2019}
M.~B{\"o}hme, V.-T. Pham, and A.~Roychoudhury, ``Coverage-based greybox fuzzing
  as markov chain,'' \emph{IEEE Transactions on Software Engineering}, vol.~45,
  no.~5, pp. 489--506, 2019.

\bibitem{dolan-gavittLAVALargescaleAutomated2016}
B.~{Dolan-Gavitt}, P.~Hulin, E.~Kirda, T.~Leek, A.~Mambretti, W.~Robertson,
  F.~Ulrich, and R.~Whelan, ``{{LAVA}}: {{Large-scale}} automated vulnerability
  addition,'' in \emph{2016 {{IEEE}} Symposium on Security and Privacy
  ({{SP}})}, 2016, pp. 110--121.

\bibitem{AFLplusplusAflcov2025}
``{{AFLplusplus}}/afl-cov,'' Advanced Fuzzing League ++, Apr. 2025.

\bibitem{metzmanFuzzBenchOpenFuzzer2021}
J.~Metzman, L.~Szekeres, L.~Simon, R.~Sprabery, and A.~Arya, ``{{FuzzBench}}:
  {{An}} open fuzzer benchmarking platform and service,'' in \emph{Proceedings
  of the 29th {{ACM}} Joint Meeting on European Software Engineering Conference
  and Symposium on the Foundations of Software Engineering}, ser.
  {{ESEC}}/{{FSE}} 2021.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY,
  USA: Association for Computing Machinery, 2021, pp. 1393--1403.

\bibitem{QuicAFLTriage2025}
``Quic/{{AFLTriage}},'' Qualcomm Innovation Center, Inc., Mar. 2025.

\bibitem{serebryanyAddressSanitizerFastAddress2012}
K.~Serebryany, D.~Bruening, A.~Potapenko, and D.~Vyukov,
  ``{{AddressSanitizer}}: {{A}} fast address sanity checker,'' in \emph{2012
  {{USENIX}} Annual Technical Conference, Boston, {{MA}}, {{USA}}, June 13-15,
  2012}, G.~Heiser and W.~C. Hsieh, Eds.\hskip 1em plus 0.5em minus 0.4em\relax
  USENIX Association, 2012, pp. 309--318.

\bibitem{bohmeFuzzingExponentialCost2020}
M.~B{\"o}hme and B.~Falk, ``Fuzzing: On the exponential cost of vulnerability
  discovery,'' in \emph{Proceedings of the 28th {{ACM Joint Meeting}} on
  {{European Software Engineering Conference}} and {{Symposium}} on the
  {{Foundations}} of {{Software Engineering}}}, ser. {{ESEC}}/{{FSE}}
  2020.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA: Association
  for Computing Machinery, 2020, pp. 713--724.

\bibitem{linDeepGoPredictiveDirected2024}
P.~Lin, P.~Wang, X.~Zhou, W.~Xie, G.~Zhang, and K.~Lu, ``{{DeepGo}}:
  {{Predictive}} directed greybox fuzzing,'' in \emph{31st Annual Network and
  Distributed System Security Symposium, {{NDSS}} 2024, San Diego, California,
  {{USA}}, February 26 - March 1, 2024}.\hskip 1em plus 0.5em minus 0.4em\relax
  The Internet Society, 2024.

\bibitem{schrittwieserMasteringAtariGo2020}
J.~Schrittwieser, I.~Antonoglou, T.~Hubert, K.~Simonyan, L.~Sifre, S.~Schmitt,
  A.~Guez, E.~Lockhart, D.~Hassabis, T.~Graepel, T.~Lillicrap, and D.~Silver,
  ``Mastering atari, go, chess and shogi by planning with a learned model,''
  \emph{Nature}, vol. 588, no. 7839, pp. 604--609, Dec. 2020.

\bibitem{aryaOSSfuzz2025}
A.~Arya, O.~Chang, J.~Metzman, K.~Serebryany, and D.~Liu, ``{{OSS-fuzz}},''
  Jan. 2025.

\bibitem{lemieuxFairFuzzTargetedMutation2018}
C.~Lemieux and K.~Sen, ``{{FairFuzz}}: A targeted mutation strategy for
  increasing greybox fuzz testing coverage,'' in \emph{Proceedings of the 33rd
  {{ACM}}/{{IEEE}} International Conference on Automated Software Engineering},
  ser. {{ASE}} '18.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA:
  Association for Computing Machinery, 2018, pp. 475--485.

\bibitem{bohmeBoostingFuzzerEfficiency2020}
M.~B{\"o}hme, V.~J.~M. Man{\`e}s, and S.~K. Cha, ``Boosting fuzzer efficiency:
  {{An}} information theoretic perspective,'' in \emph{Proceedings of the 28th
  {{ACM}} Joint Meeting on European Software Engineering Conference and
  Symposium on the Foundations of Software Engineering}, ser. {{ESEC}}/{{FSE}}
  2020.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA: Association
  for Computing Machinery, 2020, pp. 678--689.

\bibitem{lyuEMSHistorydrivenMutation2022}
C.~Lyu, S.~Ji, X.~Zhang, H.~Liang, B.~Zhao, K.~Lu, and R.~Beyah, ``{{EMS}}:
  History-driven mutation for coverage-based fuzzing,'' in \emph{29rd {{Annual
  Network}} and {{Distributed System Security Symposium}}, {{Ndss}}}, 2022, pp.
  24--28.

\bibitem{zhaoAlphuzzMonteCarlo2022}
Y.~Zhao, X.~Wang, L.~Zhao, Y.~Cheng, and H.~Yin, ``Alphuzz: Monte carlo search
  on seed-mutation tree for coverage-guided fuzzing,'' in \emph{Proceedings of
  the 38th {{Annual Computer Security Applications Conference}}}, ser.
  {{ACSAC}} '22.\hskip 1em plus 0.5em minus 0.4em\relax New York, NY, USA:
  Association for Computing Machinery, 2022, pp. 534--547.

\bibitem{russellArtificialIntelligenceModern2020}
S.~Russell and P.~Norvig, \emph{Artificial Intelligence: {{A}} Modern Approach
  (4th Edition)}.\hskip 1em plus 0.5em minus 0.4em\relax Pearson, 2020.

\bibitem{hartFormalBasisHeuristic1968}
P.~E. Hart, N.~J. Nilsson, and B.~Raphael, ``A formal basis for the heuristic
  determination of minimum cost paths,'' \emph{IEEE Transactions on Systems
  Science and Cybernetics}, vol.~4, no.~2, pp. 100--107, 1968.

\bibitem{huangBalanceSeedScheduling2023}
H.~Huang, H.-C. Chiu, Q.~Shi, P.~Yao, and C.~Zhang, ``Balance seed scheduling
  via monte carlo planning,'' \emph{IEEE Transactions on Dependable and Secure
  Computing}, pp. 1--15, 2023.

\bibitem{leeLearningSeedadaptiveMutation2023}
M.~Lee, S.~Cha, and H.~Oh, ``Learning seed-adaptive mutation strategies for
  greybox fuzzing,'' in \emph{2023 {{Ieee}}/Acm 45th {{International
  Conference}} on {{Software Engineering}} (Icse)}, 2023, pp. 384--396.

\bibitem{eomFuzzingJavaScriptInterpreters2024}
J.~Eom, S.~Jeong, and T.~Kwon, ``Fuzzing {{JavaScript}} interpreters with
  coverage-guided reinforcement learning for {{LLM-based}} mutation,'' in
  \emph{Proceedings of the 33rd {{ACM SIGSOFT}} International Symposium on
  Software Testing and Analysis}, ser. Issta 2024.\hskip 1em plus 0.5em minus
  0.4em\relax New York, NY, USA: Association for Computing Machinery, 2024, pp.
  1656--1668.

\bibitem{jhaBertRLFuzzerBERTReinforcement2024}
P.~Jha, J.~Scott, J.~S. Ganeshna, M.~Singh, and V.~Ganesh, ``{{BertRLFuzzer}}:
  {{A BERT}} and reinforcement learning based fuzzer (student abstract),'' in
  \emph{Thirty-Eighth {{AAAI}} Conference on Artificial Intelligence, {{AAAI}}
  2024, Thirty-Sixth Conference on Innovative Applications of Artificial
  Intelligence, {{IAAI}} 2024, Fourteenth Symposium on Educational Advances in
  Artificial Intelligence, {{EAAI}} 2014, February 20-27, 2024, Vancouver,
  Canada}, M.~J. Wooldridge, J.~G. Dy, and S.~Natarajan, Eds.\hskip 1em plus
  0.5em minus 0.4em\relax AAAI Press, 2024, pp. 23\,521--23\,522.

\bibitem{devlinBERTPretrainingDeep2019}
J.~Devlin, M.-W. Chang, K.~Lee, and K.~Toutanova, ``{{BERT}}: {{Pre-training}}
  of deep bidirectional transformers for language understanding,'' in
  \emph{Proceedings of the 2019 Conference of the North American Chapter of the
  Association for Computational Linguistics: {{Human}} Language Technologies,
  {{NAACL-HLT}} 2019, Minneapolis, {{MN}}, {{USA}}, June 2-7, 2019, Volume 1
  (Long and Short Papers)}, J.~Burstein, C.~Doran, and T.~Solorio, Eds.\hskip
  1em plus 0.5em minus 0.4em\relax Association for Computational Linguistics,
  2019, pp. 4171--4186.

\bibitem{kleesEvaluatingFuzzTesting2018}
G.~Klees, A.~Ruef, B.~Cooper, S.~Wei, and M.~Hicks, ``Evaluating fuzz
  testing,'' in \emph{Proceedings of the 2018 {{ACM SIGSAC}} Conference on
  Computer and Communications Security}, ser. Ccs '18.\hskip 1em plus 0.5em
  minus 0.4em\relax New York, NY, USA: Association for Computing Machinery,
  2018, pp. 2123--2138.

\end{thebibliography}
